package com.aes.procesos.autogestion.sor.service;

import java.sql.Timestamp;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.aes.procesos.autogestion.sor.model.AfectadoFallaMasiva;
import com.aes.procesos.autogestion.sor.model.FallaMasiva;
import com.aes.procesos.autogestion.sor.model.Incidencia;
import com.aes.procesos.autogestion.sor.model.ServicioContratado;
import com.aes.procesos.autogestion.sor.repositories.AfectadoFallaMasivaRepository;
import com.aes.procesos.autogestion.sor.repositories.FallaMasivaRepository;
import com.aes.procesos.autogestion.sor.repositories.IncidenciaRepository;
import com.aes.procesos.autogestion.sor.repositories.ServicioContratadoRepository;

@Service
public class GestorFallaMasivaService {
	
	@Autowired
	private FallaMasivaRepository fallaMasivaRepo;
	
	@Autowired
	private AfectadoFallaMasivaRepository afectadoRepo;
	
	
	public Optional<AfectadoFallaMasiva> buscarFallaMasivaByIdServicio(String idServicio) {

		//buscamos las fallas masivas abiertas
		List<FallaMasiva> listFallasMasivasAbiertas = fallaMasivaRepo.findByEstadoOrderByTimestampDesc("ABIERTA");
		
		for (FallaMasiva fallaMasiva: listFallasMasivasAbiertas) {
			Optional<AfectadoFallaMasiva> posibleAfectodFallaMasiva = afectadoRepo.findByFallaMasivaAndIdServicio(fallaMasiva, idServicio);
			if(posibleAfectodFallaMasiva.isPresent()) {
				return posibleAfectodFallaMasiva;
			}
		}

		return Optional.empty();
	}


	
	private List<Incidencia> traerIncidencias(String idServicio, String tipoIncidencia) {
		ServicioContratado servicioContratado = servicioRepo.findByIdServicio(idServicio);
		return incidenciaRepo.findByServicioContratadoAndTipoIncidencia(servicioContratado, tipoIncidencia);
	}

	private Incidencia generarIncidencia(String idServicio, String tipoIncidencia, String titulo, String descripcion, String canal) {
		Incidencia nueva = new Incidencia();
		
		ServicioContratado servicioContratado = servicioRepo.findByIdServicio(idServicio);
		nueva.setServicioContratado(servicioContratado);
		
		nueva.setTipoIncidencia(tipoIncidencia);
		nueva.setTitulo(titulo);
		nueva.setDescripcion(descripcion);
		nueva.setCanal(canal);
		nueva.setTimestamp(new Timestamp(System.currentTimeMillis()));
		nueva.setFechaActualizacion(nueva.getTimestamp());
		nueva.setEstado("ABIERTO");
		nueva.setRegistradoPor(nueva.getCanal() + "-autogestion-sor");
		
		return nueva;
	}	
	
	private boolean guardarIncidencia(Incidencia incidencia) {
		incidenciaRepo.save(incidencia);
		return true;
	}
	
}
